version: '3.8'

# Production Docker Compose for Alibaba Cloud ECS Deployment
services:
  # Main Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile.production
      target: production
    container_name: sirfa-app-prod
    restart: unless-stopped
    ports:
      - "3001:3001"
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - WS_PORT=8080
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost}
      # Alibaba Cloud Services
      - ALIBABA_ACCESS_KEY_ID=${ALIBABA_ACCESS_KEY_ID}
      - ALIBABA_ACCESS_KEY_SECRET=${ALIBABA_ACCESS_KEY_SECRET}
      - ALIBABA_REGION=${ALIBABA_REGION:-us-west-1}
      - ALIBABA_ASR_APP_KEY=${ALIBABA_ASR_APP_KEY}
      - ALIBABA_TTS_APP_KEY=${ALIBABA_TTS_APP_KEY}
      - DASHSCOPE_API_KEY=${DASHSCOPE_API_KEY}
      # PAI EAS Configuration
      - PAI_EAS_ENDPOINT=${PAI_EAS_ENDPOINT}
      - PAI_EAS_TOKEN=${PAI_EAS_TOKEN}
      # Database Configuration (if using RDS)
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      # API Keys
      - ALPACA_API_KEY=${ALPACA_API_KEY}
      - ALPACA_SECRET_KEY=${ALPACA_SECRET_KEY}
      - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY}
      - NEWS_API_KEY=${NEWS_API_KEY}
    volumes:
      - app_logs:/app/logs
    networks:
      - sirfa-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: sirfa-redis-prod
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - sirfa-network
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: sirfa-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - sirfa-network
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  # Log aggregation (optional)
  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    container_name: sirfa-fluentd-prod
    restart: unless-stopped
    volumes:
      - ./fluentd.conf:/fluentd/etc/fluent.conf:ro
      - app_logs:/var/log/app:ro
      - nginx_logs:/var/log/nginx:ro
    networks:
      - sirfa-network
    profiles:
      - logging
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M

networks:
  sirfa-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis_data:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local

# Health check for the entire stack
x-healthcheck-depends_on: &healthcheck
  condition: service_healthy
  
# Common environment variables
x-common-variables: &common-variables
  TZ: UTC
  LANG: en_US.UTF-8
  LC_ALL: en_US.UTF-8